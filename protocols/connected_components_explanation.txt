ConnectedComponents
===================

Graph:

16 -- 01 -- 02 -- 03 -- 05 -- 11 -- 12
       |     |
      15    04    08 -- 09 -- 14
                   |           |
      06 -- 07    10 -------- 13
      
Steps
-----

1. Undirect Edge (create undirected graph from initial graph)

Edge-List:
(1, 2), (2, 1),
(1, 15), (15, 1),
(2, 3), (3, 2),
(2, 4), (4, 2),
(3, 5), (5, 3),
(5, 11), (11, 5),
(6, 7), (7, 6),
(8, 9), (9, 8),
(8, 10), (10, 8),
(9, 14), (14, 9),
(10, 13), (13, 10),
(11, 12), (12, 11),
(13, 14), (14, 13),
(16, 1), (1, 16)

2. Create Tuples with vertex IDs as key AND values

Vertex-List (vertex-id, component-id):
(1, 1),
(2, 2),
(3, 3),
(4, 4),
(5, 5),
(6, 6),
(7, 7),
(8, 8),
(9, 9),
(10, 10),
(11, 11),
(12, 12),
(13, 13),
(14, 14),
(15, 15),
(16, 16)

3. Step logic

3.1 Join the workset (Vertex-List) with the edges on the first attribute

Vertex-Edge-List ((vertex-id, component-id), (source-vertex-id, target-vertex-id)):
((1, 1), (1, 2)),
((1, 1), (1, 15)),
((1, 1), (1, 16)),
((2, 2), (2, 1)),
((2, 2), (2, 3)),
((2, 2), (2, 4)),
((3, 3), (3, 2)),
((3, 3), (3, 5)),
((4, 4), (4, 2)),
((5, 5), (5, 3)),
((5, 5), (5, 11)),
((6, 6), (6, 7)),
((7, 7), (7, 6)),
((8, 8), (8, 9)),
((8, 8), (8, 10)),
((9, 9), (9, 8)),
((9, 9), (9, 14)),
((10, 10), (10, 8)),
((10, 10), (10, 13)),
((11, 11), (11, 5)),
((11, 11), (11, 12)),
((12, 12), (12, 11)),
((13, 13), (13, 14)),
((14, 14), (14, 9)),
((14, 14), (14, 13)),
((15, 15), (15, 1)),
((16, 16), (16, 1)) 

3.2 Apply user join function (result: (target-vertex-id, component-id))

Result-List (unsorted):
(2, 1),
(15, 1),
(16, 1),
(1, 2),
(3, 2),
(4, 2),
(2, 3),
(5, 3),
(2, 4),
(3, 5),
(11, 5),
(7, 6),
(6, 7),
(9, 8),
(10, 8),
(8, 9),
(14, 9),
(8, 10),
(13, 10),
(5, 11),
(12, 11),
(11, 12),
(14, 13),
(9, 14),
(13, 14),
(1, 15),
(1, 16)

3.3 Group by first property

Group-List:
(1, {2, 15, 16})
(2, {1, 3, 4}),
(3, {2, 5}),
(4, {2}),
(5, {3, 11}),
(6, {7}),
(7, {6}),
(8, {9, 10}),
(9, {8, 14}),
(10, {8}),
(11, {5, 12}),
(12, {11}),
(13, {10, 14}),
(14, {9, 13}),
(15, {1}),
(16, {1})

3.4 Aggregate the minimum of second property

Minimum-List:
(1, 2),
(2, 1),
(3, 2),
(4, 2),
(5, 3),
(6, 7),
(7, 6),
(8, 9),
(9, 8),
(10, 8),
(11, 5),
(12, 11),
(13, 10),
(14, 9),
(15, 1),
(16, 1)

3.5 Compare component-id with previous state and take the minimum value

Step-List:
(1, 1),
(2, 1),
(3, 2),
(4, 2),
(5, 3),
(6, 6),
(7, 6),
(8, 8),
(9, 8),
(10, 8),
(11, 5),
(12, 11),
(13, 10),
(14, 9),
(15, 1),
(16, 1)

3.6 If there were changes, repeat steps with Step-List as Vertex-List
